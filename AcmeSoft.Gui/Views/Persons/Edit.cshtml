@using AcmeSoft.Gui.Models
@model AcmeSoft.Gui.ViewModels.PersonViewModel
@{
    ViewData["Title"] = "Create";
}

<h3>@Model.ViewHeading</h3>
<hr />
<h4>Person Details</h4>
<form asp-action="@Model.FormAction">
    <div class="row">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input id="modelPurpose" type="hidden" asp-for="ModelPurpose" />
        <input type="hidden" asp-for="PersonId" />
        <input type="hidden" asp-for="EmpAction" />
    </div>
    <div class="row">
        <div class="col-md-8">
            @if (Model.ModelPurpose == ViewModelPurpose.Create || Model.ModelPurpose == ViewModelPurpose.Edit)
            {
                <p class="date-prompt">* Click inside the date fields to show a date selector.</p>
            }
            @if (Model.ModelPurpose == ViewModelPurpose.Delete)
            {
                <p class="delete-prompt">Are you sure you want to delete this employee?</p>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div id="empNumDiv" class="form-group">
                <label asp-for="EmployeeNum" class="control-label"></label>
                <input asp-for="EmployeeNum" class="form-control" readonly="readonly" />
                <span asp-validation-for="EmployeeNum" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="BirthDate" class="control-label"></label>
                <input asp-for="BirthDate" class="form-control has-date-picker" autocomplete="off" placeholder="YYYY-MM-DD" />
                <span asp-validation-for="BirthDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdNumber" class="control-label"></label>
                <input asp-for="IdNumber" class="form-control" />
                <span asp-validation-for="IdNumber" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-4 col-md-4 text-right">
            <div class="form-group">
                <input type="submit" value="@Model.ButtonText" class="btn btn-default" />
                <a asp-action="Index" class="btn btn-default">Cancel</a>
            </div>
        </div>
    </div>
    <h4>Employment Details</h4>
    <section id="empsIndex">
        @*Employments table inserted by script.*@
    </section>
</form>

    <div id="editModal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 id="modalTitle" class="modal-title">Employment Record</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="modalFormWrapper">
                        @*Partial inserted here by script*@
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="submitButton" type="button" class="btn btn-primary">Submit</button>
                    <button id="cancelButton" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function setModalHeader() {
            switch ($("#EmpAction").val()) {
            case "Create":
                $("#modalTitle").text("Create Employment");
                break;
            case "Edit":
                $("#modalTitle").text("Edit Employment");
                break;
            default:
                $("#modalTitle").text("Employment Record");
                break;
            };
        }

        function getEmployments() {
            $.ajax({
                    method: "GET",
                    url: "@Url.Action("Index", "Employments", new {personId = Model.PersonId})"
                })
                .done(function(resp) {
                    $("#empsIndex").html(resp);
                })
                .fail(function(resp) {
                    debugger;
                });
        }

        function validateEmploymentForm() {
            var valid = true;
            if ($.trim($("#Position").val()) === "") {
                $("#positionError").text("Position is a required field.");
                valid = false;
            }
            if ($.trim($("#EmployedDate").val()) === "") {
                $("#employedError").text("Employed is a required field.");
                valid = false;
            }
            return valid;
        }

        function createEmploymentPost() {
            if (validateEmploymentForm() === true) {

                var unIndexed = $("#employmentForm").serializeArray();
                var indexed = {};

                $.map(unIndexed,
                    function(n, i) {
                        indexed[n["name"]] = n["value"];
                    });
                $.ajax({
                        method: "POST",
                        url: "@Url.Action("Create", "Employments")",
                        data: indexed
                    })
                    .done(function (resp) {
                        $("#editModal").modal("hide");
                        getEmployments();
                    });
            };
        }

        function createEmploymentGet() {
            $("#EmpAction").val("Create");
            setModalHeader();
            $.ajax({
                    method: "GET",
                    url: "@Url.Action("Create", "Employments", new {personId = Model.PersonId})"
                })
                .done(function(resp) {
                    $("#modalFormWrapper").html(resp);
                });
            setTimeout(function() {
                    $(".has-date-picker").datetimepicker({ format: "YYYY-MM-DD" });
                },
                1000);
            $("#editModal").modal("show");
        }

        function editEmploymentGet(employmentId) {
            $("#EmpAction").val("Edit");
            setModalHeader();
            $.ajax({
                    method: "POST",
                    url: "@Url.Action("Edit", "Employments")" + "/" + employmentId
                })
                .done(function(resp) {
                    $("#modalFormWrapper").html(resp);
                });
        }

        $(function() {
            switch ($("#ModelPurpose").val()) {
            case "Create":
                $("#empNumDiv").addClass("hidden");
                $("#addEmpButton").addClass("hidden");
                break;
            case "Delete":
                $("input").attr("readonly", "readonly");
                break;
            };

            getEmployments();
            $(document).on("click",
                "#addEmpButton",
                function() {
                    createEmploymentGet();
                    $("#EmployedDate").datepicker();
                });
            $(document).on("click",
                "#submitButton",
                function() {
                    createEmploymentPost();
                });
            $(document).on("click",
                "#cancelButton",
                function() {
                    $("#editModal").modal("hide");
                });
            $(".editEmp").click(function() {
                preventDefault();
                var empId = $(this).closest('tr').attr("data-emp-id");
                editEmploymentGet(empId);
            });
            $("#editModal").modal({
                show: false,
                backdrop: "static"
            });
        });
    </script>
}

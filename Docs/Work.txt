        [HttpPost]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> Create(PersonViewModel model)
        {
            var json = await _client.GetStringAsync($"api/Persons/GetByIdNumber/{model.IdNumber}");
            if (!string.IsNullOrWhiteSpace(json))
            {
                ModelState.AddModelError("IdNumber", "Id Number already in use");
            }

            if (ModelState.IsValid)
            {
                var pers = Mapper.Map<Person>(model);
                var resp = await _client.PostAsync("api/Persons", new StringContent(JsonConvert.SerializeObject(pers, Formatting.Indented), Encoding.UTF8, "application/json"));
                resp.EnsureSuccessStatusCode();
            }

            return View("Edit", model);
        }
		
		
		
		        [HttpGet("GetByIdNumber/{idNumber}")]
        [Produces(typeof(Person))]
        public async Task<IActionResult> GetByIdNumber(string idNumber)
        {
            return Ok(await Db.Persons.SingleOrDefaultAsync(p => p.IdNumber == idNumber));
        }

        [HttpPost]
        public async Task<IActionResult> Post([FromBody]Person person)
        {
            Db.Add(person);
            await Db.SaveChangesAsync();
            return Ok();
        }